{"version":3,"file":"static/js/121.1d1b1448.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Movie/Movie.module.css?e0b9","components/Movie/Movie.jsx","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","services/apiCredits.js","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","services/apiReviews.js","components/Reviews/Reviews.jsx","services/apiDetails.js","components/Pages/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainInfoMovie\":\"Movie_mainInfoMovie__Qqgrc\",\"img\":\"Movie_img__WUHrV\",\"addInfo\":\"Movie_addInfo__jRzN9\",\"link\":\"Movie_link__eChTL\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Movie.module.css';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Movie = ({ dataMovie, backLinkHref }) => {\n  const location = useLocation();\n\n  if (!dataMovie) {\n    return null;\n  }\n\n  const { title, overview, genres, poster_path, vote_average } = dataMovie;\n  const genreNames = Object.values(genres).map(genre => genre.name);\n\n  return (\n    <div>\n      <Link className={css.link} to={backLinkHref}>\n        Go back\n      </Link>\n      <div className={css.mainInfoMovie}>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={title}\n          width={200}\n          className={css.img}\n        />\n        <div>\n          <h2>{title}</h2>\n          <p>\n            User Score: <span>{vote_average}</span>\n          </p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{genreNames.join(', ')}</p>\n        </div>\n      </div>\n\n      <p className={css.addInfo}>Additional information</p>\n      <ul>\n        <li>\n          <Link\n            to={`/movies/${dataMovie.id}/cast`}\n            state={{ from: location?.state?.from }}\n          >\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={`/movies/${dataMovie.id}/reviews`}\n            state={{ from: location?.state?.from }}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nMovie.propTypes = {\n  dataMovie: PropTypes.shape({\n    title: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n  }),\n};\n\nexport default Movie;\n","// extracted by mini-css-extract-plugin\nexport default {\"castTitle\":\"Cast_castTitle__eoJbw\",\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"name\":\"Cast_name__6UbFm\",\"character\":\"Cast_character__tKDlA\"};","import axios from 'axios';\n\nconst KEY = 'ffbbb5a70196bf99519e4d9f581ba53d';\n\nconst getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}`\n  );\n\n  return response.data.cast;\n};\n\nexport default getMovieCredits;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Cast.module.css';\nimport getMovieCredits from 'services/apiCredits';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      const movieCredits = await getMovieCredits(movieId);\n      setCast(movieCredits);\n    };\n\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div className={css.cast}>\n      <h3 className={css.castTitle}>Cast</h3>\n      {cast.length > 0 ? (\n        <ul className={css.list}>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <div className={css.item}>\n                {actor.profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                    alt={`${actor.name}`}\n                  />\n                ) : (\n                  <p>No photo</p>\n                )}\n                <div>\n                  <p className={css.name}>Name: {actor.name}</p>\n                  <p className={css.character}>Character: {actor.character}</p>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No cast information available</p>\n      )}\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewTitle\":\"Reviews_reviewTitle__-9Xsn\"};","import axios from 'axios';\n\nconst KEY = 'ffbbb5a70196bf99519e4d9f581ba53d';\n\nconst getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport default getMovieReviews;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Reviews.module.css';\nimport getMovieReviews from 'services/apiReviews';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      const movieReviews = await getMovieReviews(movieId);\n      setReviews(movieReviews);\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div className={css.reviews}>\n      <h3 className={css.reviewTitle}>Reviews</h3>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = 'ffbbb5a70196bf99519e4d9f581ba53d';\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`\n  );\n\n  return response.data;\n};\n\nexport default getMovieDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Route, Routes, useLocation } from 'react-router-dom';\nimport Movie from 'components/Movie/Movie';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\nimport getMovieDetails from 'services/apiDetails';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      const movieData = await getMovieDetails(movieId);\n      setMovieData(movieData);\n    };\n\n    fetchMovieData();\n  }, [movieId]);\n\n  return (\n    <>\n      <Movie dataMovie={movieData} backLinkHref={backLinkHref} />\n      <Routes>\n        <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n        <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n      </Routes>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["dataMovie","backLinkHref","location","useLocation","title","overview","genres","poster_path","vote_average","genreNames","Object","values","map","genre","name","className","css","to","src","alt","width","join","id","state","from","getMovieCredits","movieId","axios","response","data","cast","useState","setCast","useEffect","fetchMovieCredits","movieCredits","length","actor","profile_path","character","getMovieReviews","results","reviews","setReviews","fetchMovieReviews","movieReviews","review","author","content","getMovieDetails","useParams","movieData","setMovieData","fetchMovieData","path","element"],"sourceRoot":""}